<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yi疯子的忧伤的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.yifengzis.cn/"/>
  <updated>2019-11-18T08:38:28.727Z</updated>
  <id>https://blog.yifengzis.cn/</id>
  
  <author>
    <name>Yifengzis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nginx的使用</title>
    <link href="https://blog.yifengzis.cn/2019/11/18/Nginx%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://blog.yifengzis.cn/2019/11/18/Nginx的使用/</id>
    <published>2019-11-18T03:01:00.000Z</published>
    <updated>2019-11-18T08:38:28.727Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nginx的使用"><a href="#Nginx的使用" class="headerlink" title="Nginx的使用"></a>Nginx的使用</h3><h4 id="Nginx的语法"><a href="#Nginx的语法" class="headerlink" title="Nginx的语法"></a>Nginx的语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">nginx version: nginx/1.16.1</span><br><span class="line">Usage: nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -?,-h         : 帮助并退出</span><br><span class="line">  -v            : 显示版本号并退出</span><br><span class="line">  -V            : 显示版本号和配置选项并退出</span><br><span class="line">  -t            : 测试配置文件并退出</span><br><span class="line">  -T            : 测试配置文件，配置文件的详细配置内容并退出</span><br><span class="line">  -q            : 在配置测试时，抑制正确信息输出</span><br><span class="line">  -s signal     : 向主进程发送信号: stop, quit, reopen, reload</span><br><span class="line">  -p prefix     : 设置加载配置文件路径 nginx.conf (default: /etc/nginx/)</span><br><span class="line">  -c filename   : 设置加载指定配置文件 (default: /etc/nginx/nginx.conf)</span><br><span class="line">  -g directives : 设置配置文件之外的全局指令</span><br></pre></td></tr></table></figure><h4 id="Nginx的常用指令"><a href="#Nginx的常用指令" class="headerlink" title="Nginx的常用指令"></a>Nginx的常用指令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx<span class="comment"># 启动 Nginx</span></span><br><span class="line">nginx -s stop<span class="comment"># 快速停止 Nginx</span></span><br><span class="line">nginx -s quit<span class="comment"># 完整有序的停止 Nginx</span></span><br><span class="line">nginx -s reload<span class="comment"># 重新加载 Nginx</span></span><br><span class="line">nginx -s reopen<span class="comment"># 重新打开 Nginx 的日志文件</span></span><br></pre></td></tr></table></figure><h3 id="安装Nginx之后需要做的事情"><a href="#安装Nginx之后需要做的事情" class="headerlink" title="安装Nginx之后需要做的事情"></a>安装Nginx之后需要做的事情</h3><h4 id="把Nginx设置开机自启"><a href="#把Nginx设置开机自启" class="headerlink" title="把Nginx设置开机自启"></a>把Nginx设置开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> nginx.service<span class="comment"># 设置开机自启</span></span><br><span class="line"><span class="comment"># 以下命令也需要知道</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> nginx.service<span class="comment"># 删除开机自启</span></span><br><span class="line">sudo systemctl status nginx.service<span class="comment"># 查看Nginx服务运行状态</span></span><br><span class="line">sudo systemctl start nginx.service<span class="comment"># 运行Nginx服务</span></span><br><span class="line">sudo systemctl stop nginx.service<span class="comment"># 停止Nginx服务</span></span><br><span class="line">sudo systemctl restart nginx.service<span class="comment"># 重启Nginx服务</span></span><br></pre></td></tr></table></figure><h4 id="根据需求开启防火墙端口"><a href="#根据需求开启防火墙端口" class="headerlink" title="根据需求开启防火墙端口"></a>根据需求开启防火墙端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不同发行版本的Linux都拥有不同的防火墙软件，红帽和CentOS默认的防火墙是firewalld，下面以firewalld为例：</span></span><br><span class="line">sudo firewall-cmd --zone=public --add-port=80/tcp --permanent<span class="comment"># 开启80端口</span></span><br><span class="line">sudo firewall-cmd --zone=public --add-port=443/tcp --permanent<span class="comment"># 开启https(443)端口</span></span><br><span class="line"><span class="comment"># 开放端口之后并不能用，需要重启firewalld服务</span></span><br><span class="line">sudo firewall-cmd --reload<span class="comment"># 重新加载firewalld</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">sudo systemctl restart firewalld.service<span class="comment"># 重启firewalld</span></span><br></pre></td></tr></table></figure><h4 id="修改配置文件-nginx-conf"><a href="#修改配置文件-nginx-conf" class="headerlink" title="修改配置文件 nginx.conf"></a>修改配置文件 nginx.conf</h4><p>有一个在线配置nginx的web神器，分享给大家 <a href="https://nginxconfig.io/" target="_blank" rel="noopener">https://nginxconfig.io/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">默认配置文件路径：/etc/nginx/nginx.conf</span><br><span class="line">`/etc/nginx/conf.d` 这个路径下的conf文件也是nginx默认的配置文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Nginx的使用&quot;&gt;&lt;a href=&quot;#Nginx的使用&quot; class=&quot;headerlink&quot; title=&quot;Nginx的使用&quot;&gt;&lt;/a&gt;Nginx的使用&lt;/h3&gt;&lt;h4 id=&quot;Nginx的语法&quot;&gt;&lt;a href=&quot;#Nginx的语法&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="web服务器" scheme="https://blog.yifengzis.cn/categories/web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Nginx" scheme="https://blog.yifengzis.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx的安装</title>
    <link href="https://blog.yifengzis.cn/2019/11/15/Nginx%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.yifengzis.cn/2019/11/15/Nginx的安装/</id>
    <published>2019-11-15T12:13:10.000Z</published>
    <updated>2019-11-18T08:39:25.801Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Nginx的介绍"><a href="#Nginx的介绍" class="headerlink" title="Nginx的介绍"></a>Nginx的介绍</h3><p>Nginx（发音同engine x）是异步框架的网页服务器，也可以用作反向代理、负载平衡器和HTTP缓存。该软件由伊戈尔·赛索耶夫创建并于2004年首次公开发布。2011年成立同名公司以提供支持。2019年3月11日，Nginx公司被F5 Networks以6.7亿美元收购。</p><p>Nginx是免费的开源软件，根据类BSD许可证的条款发布。一大部分Web服务器使用Nginx，通常作为负载均衡器。</p><p>具体大家可以看下维基百科：<a href="https://zh.wikipedia.org/wiki/Nginx" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Nginx</a></p><h3 id="Nginx的特点"><a href="#Nginx的特点" class="headerlink" title="Nginx的特点"></a>Nginx的特点</h3><p>Nginx可以部署在网络上使用FastCGI脚本、SCGI处理程序、WSGI应用服务器或Phusion Passenger模块的动态HTTP内容，并可作为软件负载均衡器。</p><p>Nginx使用异步事件驱动的方法来处理请求。Nginx的模块化事件驱动架构可以在高负载下提供更可预测的性能。</p><p>Nginx是一款面向性能设计的HTTP服务器，相较于Apache、lighttpd具有占有内存少，稳定性高等优势。与旧版本（&lt;=2.2）的Apache不同，Nginx不采用每客户机一线程的设计模型，而是充分使用异步逻辑从而削减了上下文调度开销，所以并发服务能力更强。整体采用模块化设计，有丰富的模块库和第三方模块库，配置灵活。 在Linux操作系统下，Nginx使用epoll事件模型，得益于此，Nginx在Linux操作系统下效率相当高。同时Nginx在OpenBSD或FreeBSD操作系统上采用类似于epoll的高效事件模型kqueue。</p><p>根据Netcraft在2016年11月网络服务器调查，Nginx被发现是所有“活跃”站点（被调查站点的18.22%）和百万最繁忙站点（被调查站点的27.83%）中使用次数最多的Web服务器。根据W3Techs的数据，前100万个网站中的37.7%，前10万个网站中的49.7%，以及前10000个网站中的57.0%被使用。据BuiltWith统计，在全球前10000个网站中，有38.2%的网站使用Nginx。维基百科使用Nginx作为其SSL终端代理。从OpenBSD 5.2版本（2012年11月1日）开始，Nginx成为了OpenBSD基础系统的一部分，提供了替代Apache 1.3系统的替代方案，但是后来被替换为OpenBSD自己的httpd(8)。</p><h3 id="Nginx的安装"><a href="#Nginx的安装" class="headerlink" title="Nginx的安装"></a>Nginx的安装</h3><p> Nginx官方给我们提供了两种安装方法，一种是源码自己编译，另外一种是Linux packages安装。 </p><h4 id="RHEL-CentOS：-下面以CentOS8为例"><a href="#RHEL-CentOS：-下面以CentOS8为例" class="headerlink" title="RHEL/CentOS：(下面以CentOS8为例)"></a>RHEL/CentOS：(下面以CentOS8为例)</h4><p> 安装先决条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install yum-utils</span><br></pre></td></tr></table></figure><p>创建一个yum源，<code>sudo vim /etc/yum.repos.d/nginx.repo</code>，把下面的代码写入nginx.repo文件当中，如果是 <code>红帽</code> 系统，把下面代码中的 <code>centos</code> 替换成 <code>rhel</code> 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx 稳定版本</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"><span class="comment"># Nginx 主线版本</span></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p> 默认情况下，使用的Nginx是稳定版本的。如果要使用主线版本Nginx软件包，请运行以下命令： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> nginx-mainline</span><br></pre></td></tr></table></figure><p> 安装Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum clean all<span class="comment"># 删除缓存数据</span></span><br><span class="line">sudo yum makecache<span class="comment"># 创建元数据缓存</span></span><br><span class="line">sudo yum install nginx<span class="comment"># 安装 Nginx</span></span><br></pre></td></tr></table></figure><p>当提示您接受GPG密钥时，请验证指纹是否匹配 <code>573B FD6B 3D8F BC64 1079 A6AB ABF5 BD82 7BD9 BF62</code>，如果是，则接受它。 </p><h4 id="Debian-amp-Ubuntu：-下面以Debian10为例"><a href="#Debian-amp-Ubuntu：-下面以Debian10为例" class="headerlink" title="Debian &amp; Ubuntu：(下面以Debian10为例)"></a>Debian &amp; Ubuntu：(下面以Debian10为例)</h4><p>安装先决条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install curl gnupg2 ca-certificates lsb-release</span><br></pre></td></tr></table></figure><p>创建一个apt源，<code>sudo vim /etc/apt/sources.list.d/nginx.list</code>，把下面的代码写入nginx.repo文件当中，如果是 <code>Ubuntu</code> 系统，把下面代码中的 <code>debian</code> 替换成 <code>ubuntu</code> 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 稳定版本</span></span><br><span class="line">deb http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx</span><br><span class="line"><span class="comment"># 主线版本</span></span><br><span class="line"><span class="comment">#deb http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx</span></span><br></pre></td></tr></table></figure><p>添加Nginx的官方密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://nginx.org/keys/nginx_signing.key | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>安装Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update<span class="comment"># 更新可用软件包列表</span></span><br><span class="line">sudo apt install nginx<span class="comment"># 安装Nginx</span></span><br></pre></td></tr></table></figure><h4 id="SUSE-amp-openSUSE：-下面以SUSE为例"><a href="#SUSE-amp-openSUSE：-下面以SUSE为例" class="headerlink" title="SUSE &amp; openSUSE：(下面以SUSE为例)"></a>SUSE &amp; openSUSE：(下面以SUSE为例)</h4><p>安装先决条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper install curl ca-certificates gpg2</span><br></pre></td></tr></table></figure><p>创建一个zypper源，<code>sudo vim /etc/zypp/repos.d/nginx.repo</code>，把下面的代码写入nginx.repo文件当中，如果是 <code>openSUSE</code> 系统，把下面代码中的 <code>$releasever</code> 替换成 <code>15</code> 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx 稳定版本</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx-stable</span><br><span class="line">enabled=1</span><br><span class="line">autorefresh=1</span><br><span class="line">baseurl=http://nginx.org/packages/sles/<span class="variable">$releasever</span></span><br><span class="line">gpgcheck=1</span><br><span class="line"><span class="comment"># Nginx 主线版本</span></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx-mainline</span><br><span class="line">enabled=0</span><br><span class="line">autorefresh=1</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/sles/<span class="variable">$releasever</span></span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><p>添加Nginx的官方密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -os /tmp/nginx_signing.key https://nginx.org/keys/nginx_signing.key</span><br><span class="line">sudo rpmkeys --import /tmp/nginx_signing.key</span><br></pre></td></tr></table></figure><p>安装Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo zypper clean<span class="comment"># 清理本地缓存</span></span><br><span class="line">sudo zypper refresh<span class="comment"># 刷新全部软件源</span></span><br><span class="line">sudo zypper install nginx<span class="comment"># 安装Nginx</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Nginx的介绍&quot;&gt;&lt;a href=&quot;#Nginx的介绍&quot; class=&quot;headerlink&quot; title=&quot;Nginx的介绍&quot;&gt;&lt;/a&gt;Nginx的介绍&lt;/h3&gt;&lt;p&gt;Nginx（发音同engine x）是异步框架的网页服务器，也可以用作反向代理、负载平衡器和
      
    
    </summary>
    
    
      <category term="web服务器" scheme="https://blog.yifengzis.cn/categories/web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Nginx" scheme="https://blog.yifengzis.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Git的安装</title>
    <link href="https://blog.yifengzis.cn/2019/11/12/Git%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.yifengzis.cn/2019/11/12/Git的安装/</id>
    <published>2019-11-12T08:46:59.000Z</published>
    <updated>2019-11-12T08:57:24.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git的简介"><a href="#Git的简介" class="headerlink" title="Git的简介"></a>Git的简介</h2><p>Git是什么？</p><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p><p>Git有什么特点？简单来说就是：高端大气上档次！</p><p>具体介绍请观看<a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000" target="_blank" rel="noopener">廖雪峰的官方网站</a>~</p><p>官网： <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p><p>源码： <a href="https://github.com/git/git/" target="_blank" rel="noopener">https://github.com/git/git/</a></p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p><strong>Debian &amp; Ubuntu</strong></p><p>老一点的Debian或Ubuntu Linux，要把命令改为<code>sudo apt-get install git-core</code>，因为以前有个软件也叫GIT（GNU Interactive Tools），结果Git就只能叫<code>git-core</code>了。由于Git名气实在太大，后来就把<code>GNU Interactive Tools</code>改成<code>gnuit</code>，<code>git-core</code>正式改为<code>git</code>。</p><p>如果是其他Linux版本，可以直接通过源码安装。先从Git官网()下载源码，然后解压，依次输入：<code>./config</code>，<code>make</code>，<code>sudo make install</code>这几个命令安装就好了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><p><strong>CentOS &amp; Fedora &amp; Red Hat</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git</span><br></pre></td></tr></table></figure><h3 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h3><p>如果进入<a href="https://git-scm.com" target="_blank" rel="noopener">Git官网</a>下载速度慢的话，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p><p>下载安装即可。</p><h3 id="Mac-OS"><a href="#Mac-OS" class="headerlink" title="Mac OS"></a>Mac OS</h3><p>Mac有三种安装方式：</p><ol><li><p>使用Homebrew；</p></li><li><p>使用MacPorts;；</p></li><li><p>在<a href="https://git-scm.com" target="_blank" rel="noopener">Git官网</a>下载dmg安装程序。</p></li></ol><h2 id="使用-Git"><a href="#使用-Git" class="headerlink" title="使用 Git"></a>使用 Git</h2><p>安装Git后首先要做的事情是设置你的用户名称和E-Mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"Your Name Comes Here"</span><span class="comment">#名称</span></span><br><span class="line">$ git config --global user.email you@yourdomain.example.com<span class="comment">#邮箱</span></span><br></pre></td></tr></table></figure><p><strong>语法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git [--version] [--<span class="built_in">help</span>] [-C &lt;路径&gt;] [-c &lt;名称&gt;=&lt;取值&gt;]</span><br><span class="line">    [--<span class="built_in">exec</span>-path[=&lt;路径&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">    [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">    [--git-dir=&lt;路径&gt;] [--work-tree=&lt;路径&gt;] [--namespace=&lt;名称&gt;]</span><br><span class="line">    &lt;命令&gt; [&lt;参数&gt;]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git的简介&quot;&gt;&lt;a href=&quot;#Git的简介&quot; class=&quot;headerlink&quot; title=&quot;Git的简介&quot;&gt;&lt;/a&gt;Git的简介&lt;/h2&gt;&lt;p&gt;Git是什么？&lt;/p&gt;
&lt;p&gt;Git是目前世界上最先进的分布式版本控制系统（没有之一）。&lt;/p&gt;
&lt;p&gt;Gi
      
    
    </summary>
    
    
      <category term="运维" scheme="https://blog.yifengzis.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Git" scheme="https://blog.yifengzis.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.yifengzis.cn/2019/11/08/hello-world/"/>
    <id>https://blog.yifengzis.cn/2019/11/08/hello-world/</id>
    <published>2019-11-08T09:21:50.709Z</published>
    <updated>2019-11-08T09:21:50.661Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="乱七八糟" scheme="https://blog.yifengzis.cn/categories/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
    
      <category term="乱七八糟" scheme="https://blog.yifengzis.cn/tags/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F/"/>
    
  </entry>
  
</feed>
